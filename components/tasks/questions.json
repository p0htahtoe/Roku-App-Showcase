{
	"questions":[
	{
		"text": "How do you enable the Developer Mode in Roku?",
		"options": [
			{"id": "home, home, home, up, up, right, left, right, left, right", "value": true},
			{"id": "home, home, up, home, up, left, right, left , right, home", "value": false},
			{"id": "home, back, up, OK, left, left, left, right, right, OK", "value": false},
			{"id": "back, up, right, down, left, home, home, up, up, OK", "value": false}
		]},
	{
		"text": "If ex = 1.2$, what will type(ex) return?",
		"options": [
			{"id": "String", "value": true},
			{"id": "Integer", "value": false},
			{"id": "Float", "value": false},
			{"id": "Boolean", "value": false}
		]},
	{
		"text": "What two languages do Roku screens require?",
		"options": [
			{"id": "Basic and BrightScript", "value": false},
			{"id": "XML and Java", "value": false},
			{"id": "SceneGraph and BrightScript", "value": true},
			{"id": "HTML and CSS", "value": false}
		]},
	{
		"text": "Every SceneGraph component must define an init() function.",
		"options": [
			{"id": "Always", "value": false},
			{"id": "Never", "value": false},
			{"id": "It should be sub init()", "value": false},
			{"id": "Only in some circumstances", "value": true}
		]},
    {
        "text": "How do you declare variables in BrightScript?",
        "options": [
            {"id": "You don't need to declare variables in BrightScript.", "value": true},
            {"id": "It doesn't matter how you declare variables in BrightScript.", "value": false},
            {"id": "Explicitly State variable type upon declaration to the LEFT of variable.", "value": false},
            {"id": "Explicitly State variable type upon declaration to the RIGHT of variable.", "value": false}
        ]},
	{
		"text": "What are the XML elements?",
		"options": [
			{"id": "<children>, <field>, <script>, <node>", "value": false},
			{"id": "<component>, <child>, <parent>", "value": false},
			{"id": "<component>, <interface>, <script>, <children>", "value": true},
			{"id": "<interface>, <scene>, <?xml?>", "value": false}
		]},
	{
		"text": "The following attribute is required to define <component> . . .",
		"options": [
			{"id": "extends", "value": false},
			{"id": "name", "value": true},
			{"id": "version", "value": false},
			{"id": "None of the above.", "value": false}
		]},
	{
		"text": "What does the <script> attribute do? (Choose any that apply)",
		"options": [
			{"id": "It adds meaning to the component.", "value": false},
			{"id": "It allows the definition of functions to initialize the component.", "value": true},
			{"id": "It defines the functions within the component.", "value": false},
			{"id": "It allows the definition of functions to respond to events.", "value": true}
		]},
	{
		"text": "Which of these are Renderable Nodes?",
		"options": [
			{"id": "Poster", "value": false},
			{"id": "Rectangle", "value": false},
			{"id": "SimpleLabel", "value": false},
			{"id": "All of the above.", "value": true}
		]},
	{
		"text": "Which of these are Label Nodes?",
		"options": [
			{"id": "Label, InfoLabel, RotatingLabel", "value": false},
			{"id": "InfoLabel, SimpleLabel, StyleLabel, ComplexLabel", "value": false},
			{"id": "LabelBase, MultiStyleLabel, Label, InfoPane", "value": true},
			{"id": "MultiStyleLabel, SimpleLabel, ComplexLabel", "value": false}
		]}
       ]

}